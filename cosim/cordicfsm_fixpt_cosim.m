% Auto generated function to simulate the generated HDL code using cosimulation
% 
% Generated by MATLAB 24.2 and HDL Coder 24.2

function [ref_Z,ref_r_cordic,ref_p_cordic,ref_x_out,ref_y_out] = cordicfsm_fixpt_cosim(Cordic_on,x_in,y_in)

coder.extrinsic('cordicfsm_fixpt_sysobj_cosim');
coder.extrinsic('hdlverifier.assert');
coder.extrinsic('hdlverifier.Delay');
coder.extrinsic('step');

% Declare persistent variables
persistent initialized;
persistent delayobj_Z;
persistent delayobj_r_cordic;
persistent delayobj_p_cordic;
persistent delayobj_x_out;
persistent delayobj_y_out;

% Initialize persistent variables
if isempty(initialized)
   initialized = true;
   % Instantiate delay System object(s)
   delayobj_Z = hdlverifier.Delay('Length',1);
   delayobj_r_cordic = hdlverifier.Delay('Length',1);
   delayobj_p_cordic = hdlverifier.Delay('Length',1);
   delayobj_x_out = hdlverifier.Delay('Length',1);
   delayobj_y_out = hdlverifier.Delay('Length',1);

end

% Call the original MATLAB function to get reference signal
[ref_Z,ref_r_cordic,ref_p_cordic,ref_x_out,ref_y_out] = cordicfsm_fixpt(Cordic_on,x_in,y_in);

% Run cosimulation
[Z,r_cordic,p_cordic,x_out,y_out] = cordicfsm_fixpt_sysobj_cosim(Cordic_on,x_in,y_in);

% Convert output signals
Z = logical(Z);


% Delay reference signal
Z_d1 = step(delayobj_Z,ref_Z);
r_cordic_d1 = step(delayobj_r_cordic,ref_r_cordic);
p_cordic_d1 = step(delayobj_p_cordic,ref_p_cordic);
x_out_d1 = step(delayobj_x_out,ref_x_out);
y_out_d1 = step(delayobj_y_out,ref_y_out);

% Verify the cosimulation output
hdlverifier.assert(Z,Z_d1,'Z');
hdlverifier.assert(r_cordic,r_cordic_d1,'r_cordic');
hdlverifier.assert(p_cordic,p_cordic_d1,'p_cordic');
hdlverifier.assert(x_out,x_out_d1,'x_out');
hdlverifier.assert(y_out,y_out_d1,'y_out');

